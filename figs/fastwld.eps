%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox: 0 0 425 170%%Creator: IgorPro%%Title: Graph3%%Creation Date: Thu, May 3, 2012 11:15%%DocumentFonts:  (atend) %%LanguageLevel: 2%%EndComments%%BeginProlog%%EndProlog%%BeginResource: procset IgorProcset 1.0 0/IgorSave save def		% Level 2 procs200 dict begin0 setgray 0 setlinecap1 setlinewidth 0 setlinejoin1 setmiterlimit [] 0 setdash/aw 0 def 	/ah 0 def/x0 0 def	/y0 0 def	/x1 0 def	/y1 0 def/rx0 0 def	/ry0 0 def	/rx1 0 def	/ry1 0 def/tmp0 0 def /tmp1 0 def/packedRed 0 def /packedGreen 0 def /packedBlue 0 def/x 0 def	/y 0 def	/w 0 def	/c 0 string def/rbak 1 def	/gbak 1 def	/bbak 1 def/rfor 0 def	/gfor 0 def	/bfor 0 def/bdef{bind def}bind def/ldef{load def}bdef/xdef{exch def}bdef/useCMYK 0 def/useRound false def/Mysetrgbcolor{	% r g b	useCMYK 1 eq	{		3 {1 exch sub 3 -1 roll} repeat			% c=1-r, m= 1-g, y= 1-b		dup		2 index 2 copy gt {exch} if pop		3 index 2 copy gt {exch} if pop%		2 div									% k= (min of c,m,y)/2		4 1 roll		3 {3 index sub 3 -1 roll} repeat		% sub k from c,m & y		4 -1 roll		setcmykcolor	}	{ setrgbcolor }	ifelse}bdef%******** BEGIN NEW PAT STUFF ********** [/transparentPats 0 def/l {lineto} bdef/m {moveto} bdef/PatCom{pop transparentPats 0 eq {UseBack 0 0 8 8 rectfill} if UseFore}bdef/SpecialPatProcs<<	/p0102040810204080 {PatCom 6.5 0 m 0 6.5 l 0 7.5 l 7.5 0 l 6.5 0 l 8 6.5 m 6.5 8 l 7.5 8 l 8 7.5 l 8 6.5 l fill}bind	/p8040201008040201 {PatCom 0 0.5 m 7.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 0.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l 7.5 0 m 8 0.5 l 8 0 l 7.5 0 l fill}bind	/p03060C183060C081 {PatCom 5.5 0 m 0 5.5 l 0 7.5 l 7.5 0 l 5.5 0 l 8 5.5 m 5.5 8 l 7.5 8 l 8 7.5 l 8 5.5 l fill}bind	/pC06030180C060381 {PatCom 0 0 m 0 1.5 l 6.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l 6.5 0 m 8 1.5 l 8 0 l 6.5 0 l fill}bind	/p83070E1C3870E0C1 {PatCom 5.5 0 m 0 5.5 l 0 8 l 0.5 8 l 8 0.5 l 8 0 l 5.5 0 l 0 0 m 0 0.5 l 0.5 0 l 0 0 l 8 5.5 m 5.5 8 l 8 8 l 8 5.5 l fill}bind	/pC1E070381C0E0783 {PatCom 0 0 m 0 1.5 l 6.5 8 l 8 8 l 8 6.5 l 1.5 0 l 0 0 l 0 6.5 m 0 8 l 1.5 8 l 0 6.5 l 6.5 0 m 8 1.5 l 8 0 l 6.5 0 l fill}bind	/p1122448811224488 {PatCom 2.5 0 m 0 2.5 l 0 3.5 l 3.5 0 l 2.5 0 l 6.5 0 m 0 6.5 l 0 7.5 l 7.5 0 l 6.5 0 l 8 2.5 m 2.5 8 l 3.5 8 l 8 3.5 l 8 2.5 l 8 6.5 m 6.5 8 l 7.5 8 l 8 7.5 l 8 6.5 l fill}bind	/p8844221188442211 {PatCom 7.5 0 m 8 0.5 l 8 0 l 7.5 0 l 3.5 0 m 8 4.5 l 8 3.5 l 4.5 0 l 3.5 0 l 0 0 m 0 0.5 l 7.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 3.5 m 0 4.5 l 3.5 8 l 4.5 8 l 0 3.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l fill}bind		/p3366CC993366CC99 {PatCom 1.5 0 m 0 1.5 l 0 3.5 l 3.5 0 l 1.5 0 l 5.5 0 m 0 5.5 l 0 7.5 l 7.5 0 l 5.5 0 l 8 1.5 m 1.5 8 l 3.5 8 l 8 3.5 l 8 1.5 l 8 5.5 m 5.5 8 l 7.5 8 l 8 7.5 l 8 5.5 l fill}bind	/pCC663399CC663399 {PatCom 6.5 0 m 8 1.5 l 8 0 l 6.5 0 l 2.5 0 m 8 5.5 l 8 3.5 l 4.5 0 l 2.5 0 l 0 0 m 0 1.5 l 6.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 0 3.5 m 0 5.5 l 2.5 8 l 4.5 8 l 0 3.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l fill}bind	/p77EEDDBB77EEDDBB {PatCom 0.5 0 m 0 0.5 l 0 3.5 l 3.5 0 l 0.5 0 l 4.5 0 m 0 4.5 l 0 7.5 l 7.5 0 l 4.5 0 l 8 0.5 m 0.5 8 l 3.5 8 l 8 3.5 l 8 0.5 l 8 4.5 m 4.5 8 l 7.5 8 l 8 7.5 l 8 4.5 l fill}bind	/pEE77BBDDEE77BBDD {PatCom 0 0 m 0 2.5 l 5.5 8 l 8 8 l 8 7.5 l 0.5 0 l 0 0 l 1.5 0 m 8 6.5 l 8 3.5 l 4.5 0 l 1.5 0 l 5.5 0 m 8 2.5 l 8 0 l 5.5 0 l 0 3.5 m 0 6.5 l 1.5 8 l 4.5 8 l 0 3.5 l 0 7.5 m 0 8 l 0.5 8 l 0 7.5 l fill}bind	/pE4C993274E9C3972 {PatCom 0 0 m 0 2.5 l 2.5 0 l 0 0 l 4.5 0 m 0 4.5 l 0 5.5 l 5.5 0 l 4.5 0 l 7.5 0 m 0 7.5 l 0 8 l 2.5 8 l 8 2.5 l 8 0 l 7.5 0 l 8 4.5 m 4.5 8 l 5.5 8 l 8 5.5 l 8 4.5 l 8 7.5 m 7.5 8 l 8 8 l 8 7.5 l fill}bind	/p2793C9E472399C4E {PatCom 5.5 0 m 8 2.5 l 8 1.5 l 6.5 0 l 5.5 0 l 0.5 0 m 8 7.5 l 8 4.5 l 3.5 0 l 0.5 0 l 0 1.5 m 0 2.5 l 5.5 8 l 6.5 8 l 0 1.5 l 0 4.5 m 0 7.5 l 0.5 8 l 3.5 8 l 0 4.5 l fill}bind>>def/Pat8Image2{			% patternstring -- 	transparentPats 0 eq {UseBack 0 0 8 8 rectfill} if	UseFore	0 exch									% y patstr	{		0 exch								% y x value		128 8{								% y x value bitmask			dup 2 index and 0 eq not{		% y x bitmask value boolval				2 index 4 index 1 1 rectfill			}if			-1 bitshift 3 2 roll 			1 add			3 1 roll		}repeat		pop pop pop		1 add	}forall	pop}bdef/PatstrToName{	(p0000000000000000)	17 string copy	% apparantly literal strings are global objects	exch 1 exch	{		16 (00) cvrs dup length 		3 index 3 index 3 -1 roll 2 exch sub add		3 -1 roll putinterval		2 add	}forall	pop	cvn}bdef/ThePatTemplate<<	/PatternType 1		% Tiling pattern	/PaintType 1		% Colored	/TilingType 1	/BBox [0 0 8 8]	/XStep 8	/YStep 8	/mypatstr <03060C183060C081>	/PaintProc {begin mypatstr Pat8Image2 end}bind>>def/FillPattern{	% patternstring --	gsave	ThePatTemplate /mypatstr 2 index put	PatstrToName SpecialPatProcs 1 index known{		SpecialPatProcs exch get	}{		{begin mypatstr Pat8Image2 end}bind	}ifelse	ThePatTemplate /PaintProc 3 -1 roll put	ThePatTemplate matrix makepattern setpattern fill	grestore	/transparentPats 0 def}bdef%******** END NEW PAT STUFF ********** ]/UseBack{ rbak gbak bbak Mysetrgbcolor }bdef/UseFore{ rfor gfor bfor Mysetrgbcolor }bdef/SetBack {/bbak xdef /gbak xdef /rbak xdef }bdef/SetFore {/bfor xdef /gfor xdef /rfor xdef }bdef/ps {setlinewidth} bdef	/clw {currentlinewidth} bdef/sd {0 setdash} bdef/mstroke {0 clw eq {newpath}{stroke} ifelse} bdef/_R{ .5 sub round .5 add}bdef/allign{ useRound {transform _R exch _R exch itransform} if }bdef/L {allign lineto} bdef/M {allign moveto} bdef/addto { dup load exec 3 -1 roll add store }bdef/MacLine{		% xto yto xfrom yfrom MacLine --	newpath		% only handles horizontal or vertical lines	/y0 xdef /x0 xdef /y1 xdef /x1 xdef	x1 x0 sub abs	y1 y0 sub abs gt	{clw x1 x0 gt {/x1}{/x0}ifelse  addto  clw 2 div dup /y0 addto /y1 addto}	{clw y1 y0 gt {/y1}{/y0}ifelse  addto  clw 2 div dup /x0 addto /x1 addto}	ifelse	x0 y0 M	x1 y1 L	mstroke}bdef/FillPath{		% graylevel FillPath --   fills current path and leaves path alive	gsave	dup 1 exch sub		% glev 1-glev	rbak 2 index mul	rfor 2 index mul add	gbak 3 index mul	gfor 3 index mul add	bbak 4 index mul	bfor 4 index mul add	Mysetrgbcolor	pop pop	fill	grestore}bdef/StrokePath{		% linejoin StrokePath --   strokes current path and leaves path alive	gsave	setlinejoin	mstroke	grestore}bdef/RectPath{		% x0 y0 x1 y1 RectPath -- sets current path to a rectange	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 y0 M	x1 y0 L	x1 y1 L	x0 y1 L	closepath}bdef/PaintRect{		% x0 y0 x1 y1 graylevel PaintRect --	gsave	5 1 roll	RectPath	FillPath	grestore}bdef% **** begin image stuff *****% The following are used for images. This has to be kept% in synch with corresponding code in ImageDisp.c.In particular% the expansion factor, 8, has to be in synch. LH010606: now to% fix colorscales in layouts, expansion factor is in variable.% packedcolor is (red*256+green)*256+blue/ExpFact 8 def	% default expansion factor/SetPackedColor{	% packedcolor SetPackedColor --	dup 256 mod /tmp0 xdef	% extract blue	256 idiv	dup 256 mod /tmp1 xdef	% extract green	256 idiv 				% extract red	255 div /packedRed xdef	tmp1 255 div /packedGreen xdef	tmp0 255 div /packedBlue xdef}bdef/IR_FillRect{	gsave	newpath	rx0 ry0 M	rx1 ry0 L	rx1 ry1 L	rx0 ry1 L	closepath	packedRed packedGreen packedBlue Mysetrgbcolor	fill	grestore}bdef/NewRectImageLine{	% x0 y0 x1 y1 packedcolor NewRectImageLine --	SetPackedColor	/ry1 xdef /rx1 xdef /ry0 xdef /rx0 xdef	% remember starting rectange for following calls		IR_FillRect}bdef/rx{		% xdist rx --	ExpFact div	dup 0 lt	{ rx0 /rx1 xdef rx1 add /rx0 xdef }		% neg delta steps left	{ rx1 /rx0 xdef rx0 add /rx1 xdef }	ifelse	IR_FillRect}bdef/ry{		% ydist rr --	ExpFact div	dup 0 lt	{ ry1 /ry0 xdef ry0 exch sub /ry1 xdef }		% neg delta steps down	{ ry0 /ry1 xdef ry1 exch sub /ry0 xdef }	ifelse	IR_FillRect}bdef/cx{		% xdist packedcolor cx --	SetPackedColor	rx}bdef/cy{		% ydist packedcolor cx --	SetPackedColor	ry}bdef% **** end image stuff *****/EraseRect{		% x0 y0 x1 y1 EraseRect --  fills rect with background color	gsave	RectPath	UseBack fill	grestore}bdef/FrameRect{		% x0 y0 x1 y1 FrameRect --	RectPath	mstroke}bdef/FrameMacRect{		% x0 y0 x1 y1 FrameMacRect --  Mac-like version	RectPath	mstroke}bdef/ellipse{	/savematrix matrix currentmatrix def	translate scale 0 0 1 0 360 arc	savematrix setmatrix}bdef/OvalPath{		% x0 y0 x1 y1 OvalPath -- sets current path to an oval inside rectange	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 x1 sub abs 2 div y0 y1 sub abs 2 div x0 x1 add 2 div y0 y1 add 2 div ellipse	closepath}bdef/PaintOval{		% x0 y0 x1 y1 graylevel PaintOval --	gsave	5 1 roll	OvalPath	FillPath	grestore}bdef/EraseOval{		% x0 y0 x1 y1 EraseOval --  fills with background color	gsave	OvalPath	UseBack fill	grestore}bdef/FrameOval{		% x0 y0 x1 y1 FrameOval --	OvalPath	mstroke}bdef/RRectPath{		% x0 y0 x1 y1 r OvalPath -- sets current path to rounded rectange, radius r	/radius xdef	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 radius add y0 M	x1 y0 x1 y1 radius arcto 4{pop}repeat	x1 y1 x0 y1 radius arcto 4{pop}repeat	x0 y1 x0 y0 radius arcto 4{pop}repeat	x0 y0 x1 y0 radius arcto 4{pop}repeat	closepath}bdef/PaintRRect{		% x0 y0 x1 y1 r graylevel PaintRRect --	gsave	6 1 roll	RRectPath	FillPath	grestore}bdef/EraseRRect{		% x0 y0 x1 y1 r EraseRRect --  fills rect with background color	gsave	RRectPath	UseBack fill	grestore}bdef/FrameRRect{		% x0 y0 x1 y1 r FrameRect --	RRectPath	mstroke}bdef/CapLine{		% x0 y0 x1 y1 linecap CapLine -- draws line using given line cap	gsave	setlinecap	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 y0 M	x1 y1 L	mstroke	grestore}bdef/Arrow{		% x0 y0 x1 y1 width height graylevel Arrow -- draws arrow at end of line from P0 to P1	gsave	/gl xdef 1 add /aw xdef 1 add /ah xdef /y0 xdef /x0 xdef /y1 xdef /x1 xdef 	x0 y0 translate	/x1 x1 x0 sub def	/y1 y1 y0 sub def	y1 x1 atan rotate	newpath	0 0 M	aw ah 2 div L	aw ah 2 div neg L	closepath	gl FillPath%	10 setmiterlimit%	1 ps%	0 StrokePath	grestore}bdef% ************ fonts ************/normal 0 def/bold 1 def/italic 2 def/underline 4 def/outline 8 def/shadow 16 def/FACE1 bold italic or def/FACE2 outline shadow or def/Shadow {	gsave	siz 0.08 mul 1 index mul x add	exch siz 0.07 mul mul y add M	c show	grestore} def/Outline {	gsave	siz .02 mul setlinewidth	x y M c true charpath	gsave UseBack fill grestore stroke	grestore} def/Underline{	gsave	siz 0.08 mul ps	x y clw add M x c stringwidth pop add y clw add L stroke	grestore}bdef/DoShow{	% assumes x,y,c are already set	fontkind FACE2 and	dup normal eq 				{c x y M show} if	dup outline eq 				{Outline} if	dup shadow eq 				{1 Shadow Outline} if	outline shadow or eq 		{1 Shadow 1.5 Shadow Outline} if	fontkind underline and 0 ne { Underline } if}bdef/DoWShow{	% assumes x,y,c & w are already set	gsave	x y translate	/x 0 def  /y 0 def	w c stringwidth pop div 1 scale	DoShow	grestore}bdef/S{	/y xdef /x xdef /c xdef	DoShow}bdef/WS{		% string x y desiredwidth WS -	/w xdef /y xdef /x xdef /c xdef	DoWShow}bdef/F{	/fontkind xdef	findfont exch /siz xdef [siz 0 0 siz neg  0 0] makefont setfont}bdef/Re-encode {	dup length array copy	/eap 0 def	exch {		dup type /integertype eq		{ /eap xdef }		{			1 index			exch			eap exch			put			/eap eap 1 add def		}		ifelse	} forall} bind def[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron]/zzz xdef/OurEncoding{ zzz StandardEncoding Re-encode }bdef/EncodeFont	{	findfont	dup length dict begin	{		1 index /FID ne		{ def }		{ pop pop }		ifelse	} forall	/FontName xdef	/Encoding xdef	FontName currentdict	end	definefont pop} bind def%%EndResource%%BeginFont: /OF011 dict begin/FontName /OF0 def% TT Name: Geneva/FontType 3 def/FontMatrix [0.001 0 0 -0.001 0 0] def/FontBBox [26 -780 610 227] def/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}forEncoding 48 /s48 putEncoding 49 /s49 putEncoding 50 /s50 putEncoding 51 /s51 putEncoding 52 /s52 putEncoding 54 /s54 putEncoding 56 /s56 putEncoding 70 /s70 putEncoding 73 /s73 putEncoding 97 /s97 putEncoding 101 /s101 putEncoding 103 /s103 putEncoding 105 /s105 putEncoding 110 /s110 putEncoding 111 /s111 putEncoding 114 /s114 putEncoding 115 /s115 putEncoding 116 /s116 putEncoding 120 /s120 put/BoundingBoxes 19 dict defBoundingBoxes begin/s48 [57 -780 610 23] def/s49 [148 -758 392 0] def/s50 [87 -780 576 0] def/s51 [84 -780 561 23] def/s52 [53 -758 614 0] def/s54 [87 -780 595 23] def/s56 [74 -780 593 23] def/s70 [72 -758 500 0] def/s73 [72 -758 171 0] def/s97 [53 -561 496 15] def/s101 [46 -561 515 15] def/s103 [46 -561 538 227] def/s105 [72 -758 163 0] def/s110 [72 -561 519 0] def/s111 [46 -561 561 15] def/s114 [72 -561 384 0] def/s115 [38 -561 462 15] def/s116 [34 -675 405 15] def/s120 [26 -546 503 0] defend/Metrics 19 dict def Metrics begin/s48 667 def/s49 667 def/s50 667 def/s51 667 def/s52 667 def/s54 667 def/s56 667 def/s70 553 def/s73 242 def/s97 545 def/s101 568 def/s103 610 def/s105 235 def/s110 584 def/s111 606 def/s114 392 def/s115 507 def/s116 443 def/s120 530 defend/CharProcs 19 dict def CharProcs begin/.notdef {} def/s48 {333 23 moveto251 23 184 -13 133 -85 curveto82 -157 57 -255 57 -379 curveto57 -502 82 -600 133 -672 curveto184 -744 251 -780 333 -780 curveto416 -780 483 -744 534 -672 curveto585 -600 610 -502 610 -379 curveto610 -255 585 -157 534 -85 curveto483 -13 416 23 333 23 curvetoclosepath333 -53 moveto397 -53 444 -86 472 -152 curveto501 -218 515 -293 515 -378 curveto515 -463 501 -539 472 -605 curveto444 -671 397 -704 333 -704 curveto270 -704 223 -671 195 -605 curveto166 -539 152 -463 152 -378 curveto152 -293 166 -218 195 -152 curveto223 -86 270 -53 333 -53 curvetoclosepath} bind def/s49 {392 0 moveto301 0 392 0 301 0 curveto301 -664 301 0 301 -664 curveto148 -603 301 -664 148 -603 curveto148 -687 148 -603 148 -687 curveto302 -758 148 -687 302 -758 curveto392 -758 302 -758 392 -758 curveto392 0 392 -758 392 0 curvetoclosepath} bind def/s50 {576 0 moveto87 0 576 0 87 0 curveto87 -79 87 0 87 -79 curveto87 -120 100 -164 125 -213 curveto150 -261 193 -308 253 -354 curveto304 -394 253 -354 304 -394 curveto373 -447 416 -486 435 -512 curveto453 -538 462 -565 462 -593 curveto462 -622 450 -648 425 -670 curveto401 -693 366 -704 320 -704 curveto278 -704 247 -696 227 -680 curveto207 -663 197 -645 197 -625 curveto197 -620 197 -625 197 -620 curveto106 -620 197 -620 106 -620 curveto106 -625 106 -620 106 -625 curveto106 -652 115 -677 133 -701 curveto151 -725 176 -744 206 -758 curveto237 -773 276 -780 323 -780 curveto409 -780 470 -762 506 -726 curveto543 -689 561 -646 561 -595 curveto561 -568 555 -541 544 -514 curveto533 -486 510 -458 476 -428 curveto443 -398 415 -376 394 -361 curveto357 -336 394 -361 357 -336 curveto240 -256 182 -178 182 -103 curveto182 -84 182 -103 182 -84 curveto576 -84 182 -84 576 -84 curveto576 0 576 -84 576 0 curvetoclosepath} bind def/s51 {240 -379 moveto194 -379 240 -379 194 -379 curveto194 -455 194 -379 194 -455 curveto251 -455 194 -455 251 -455 curveto295 -455 329 -462 355 -476 curveto380 -490 399 -507 414 -528 curveto429 -549 436 -573 436 -598 curveto436 -631 424 -657 400 -676 curveto376 -695 344 -704 304 -704 curveto282 -704 260 -701 240 -695 curveto221 -689 205 -680 195 -666 curveto184 -652 179 -637 179 -622 curveto179 -617 179 -622 179 -617 curveto92 -617 179 -617 92 -617 curveto92 -622 92 -617 92 -622 curveto92 -662 109 -698 142 -731 curveto176 -764 231 -780 309 -780 curveto383 -780 438 -764 475 -733 curveto512 -701 531 -661 531 -611 curveto531 -584 526 -558 515 -535 curveto504 -511 488 -490 467 -471 curveto446 -453 416 -438 377 -427 curveto438 -409 485 -383 515 -348 curveto546 -313 561 -270 561 -218 curveto561 -157 540 -102 497 -52 curveto454 -2 389 23 302 23 curveto226 23 171 7 136 -26 curveto101 -58 84 -94 84 -135 curveto84 -140 84 -135 84 -140 curveto175 -140 84 -140 175 -140 curveto175 -135 175 -140 175 -135 curveto175 -108 188 -87 213 -74 curveto239 -60 271 -53 311 -53 curveto342 -53 370 -59 393 -70 curveto417 -82 435 -101 448 -127 curveto460 -153 466 -181 466 -212 curveto466 -259 447 -299 410 -331 curveto373 -363 316 -379 240 -379 curvetoclosepath} bind def/s52 {508 -231 moveto508 0 508 -231 508 0 curveto417 0 508 0 417 0 curveto417 -231 417 0 417 -231 curveto53 -231 417 -231 53 -231 curveto53 -307 53 -231 53 -307 curveto417 -758 53 -307 417 -758 curveto508 -758 417 -758 508 -758 curveto508 -307 508 -758 508 -307 curveto614 -307 508 -307 614 -307 curveto614 -231 614 -307 614 -231 curveto508 -231 614 -231 508 -231 curvetoclosepath153 -307 moveto417 -307 153 -307 417 -307 curveto417 -637 417 -307 417 -637 curveto153 -307 417 -637 153 -307 curvetoclosepath} bind def/s54 {179 -380 moveto179 -353 179 -380 179 -353 curveto201 -382 223 -404 245 -419 curveto266 -434 288 -444 309 -451 curveto331 -458 354 -462 379 -462 curveto444 -462 497 -439 536 -392 curveto575 -346 595 -290 595 -224 curveto595 -177 585 -135 564 -98 curveto544 -60 516 -30 479 -9 curveto443 12 404 23 361 23 curveto311 23 264 8 220 -21 curveto176 -51 143 -95 121 -154 curveto98 -213 87 -287 87 -374 curveto87 -498 112 -596 163 -670 curveto214 -743 286 -780 381 -780 curveto446 -780 494 -766 527 -738 curveto560 -709 576 -677 576 -641 curveto576 -636 576 -641 576 -636 curveto485 -636 576 -636 485 -636 curveto485 -641 485 -636 485 -641 curveto485 -656 476 -671 459 -684 curveto442 -697 416 -704 382 -704 curveto342 -704 307 -692 276 -668 curveto246 -644 222 -604 205 -550 curveto187 -495 179 -438 179 -380 curvetoclosepath360 -53 moveto400 -53 433 -70 460 -103 curveto487 -136 500 -177 500 -226 curveto500 -275 486 -314 458 -343 curveto429 -372 395 -386 354 -386 curveto310 -386 273 -370 245 -337 curveto217 -304 203 -265 203 -220 curveto203 -190 210 -162 224 -135 curveto238 -108 257 -88 281 -74 curveto305 -60 331 -53 360 -53 curvetoclosepath} bind def/s56 {446 -418 moveto495 -396 532 -366 556 -327 curveto581 -289 593 -249 593 -207 curveto593 -167 582 -129 561 -91 curveto539 -53 510 -25 474 -6 curveto437 13 390 23 333 23 curveto277 23 230 13 193 -6 curveto157 -25 128 -53 106 -91 curveto85 -129 74 -167 74 -207 curveto74 -249 86 -289 110 -327 curveto135 -366 171 -396 221 -418 curveto182 -437 153 -461 133 -489 curveto114 -517 104 -549 104 -585 curveto104 -621 114 -654 133 -685 curveto152 -717 181 -740 218 -756 curveto255 -772 293 -780 333 -780 curveto374 -780 412 -772 449 -756 curveto486 -740 515 -716 534 -685 curveto553 -654 563 -621 563 -585 curveto563 -549 553 -517 534 -489 curveto514 -461 485 -437 446 -418 curvetoclosepath333 -455 moveto372 -455 405 -467 430 -492 curveto455 -517 468 -547 468 -580 curveto468 -617 454 -647 427 -670 curveto400 -693 369 -704 333 -704 curveto298 -704 267 -693 240 -670 curveto213 -647 199 -617 199 -580 curveto199 -547 212 -517 237 -492 curveto262 -467 294 -455 333 -455 curvetoclosepath333 -379 moveto305 -379 278 -372 252 -358 curveto226 -343 206 -322 191 -295 curveto176 -268 169 -241 169 -212 curveto169 -185 176 -158 190 -132 curveto204 -106 224 -86 251 -73 curveto277 -60 304 -53 333 -53 curveto362 -53 390 -60 416 -73 curveto443 -86 463 -106 477 -132 curveto491 -158 498 -185 498 -212 curveto498 -241 491 -268 476 -295 curveto461 -322 440 -343 415 -358 curveto389 -372 362 -379 333 -379 curvetoclosepath} bind def/s70 {171 0 moveto72 0 171 0 72 0 curveto72 -758 72 0 72 -758 curveto500 -758 72 -758 500 -758 curveto500 -674 500 -758 500 -674 curveto171 -674 500 -674 171 -674 curveto171 -413 171 -674 171 -413 curveto458 -413 171 -413 458 -413 curveto458 -337 458 -413 458 -337 curveto171 -337 458 -337 171 -337 curveto171 0 171 -337 171 0 curvetoclosepath} bind def/s73 {171 -758 moveto171 0 171 -758 171 0 curveto72 0 171 0 72 0 curveto72 -758 72 0 72 -758 curveto171 -758 72 -758 171 -758 curvetoclosepath} bind def/s97 {496 0 moveto400 0 496 0 400 0 curveto391 -29 386 -55 386 -76 curveto347 -36 314 -11 287 -1 curveto259 10 233 15 208 15 curveto165 15 129 2 99 -25 curveto68 -51 53 -88 53 -134 curveto53 -187 74 -228 117 -256 curveto160 -285 234 -310 338 -331 curveto386 -340 338 -331 386 -340 curveto386 -401 386 -340 386 -401 curveto386 -435 375 -458 353 -472 curveto332 -485 306 -492 275 -492 curveto239 -492 210 -484 190 -467 curveto169 -450 159 -431 159 -409 curveto159 -401 159 -409 159 -401 curveto60 -401 159 -401 60 -401 curveto60 -408 60 -401 60 -408 curveto60 -432 70 -457 90 -483 curveto110 -509 137 -528 170 -541 curveto203 -554 239 -561 278 -561 curveto317 -561 353 -555 385 -542 curveto417 -530 440 -513 455 -492 curveto470 -471 477 -432 477 -374 curveto477 -162 477 -374 477 -162 curveto477 -139 478 -115 479 -89 curveto480 -64 486 -34 496 0 curvetoclosepath386 -222 moveto386 -276 386 -222 386 -276 curveto360 -269 386 -276 360 -269 curveto270 -247 213 -225 188 -205 curveto163 -185 151 -160 151 -132 curveto151 -118 155 -105 162 -92 curveto170 -80 180 -70 195 -63 curveto209 -56 224 -53 238 -53 curveto263 -53 287 -60 311 -75 curveto334 -90 353 -110 366 -135 curveto379 -160 386 -189 386 -222 curvetoclosepath} bind def/s101 {421 -136 moveto421 -141 421 -136 421 -141 curveto512 -141 421 -141 512 -141 curveto512 -136 512 -141 512 -136 curveto512 -112 503 -87 484 -62 curveto465 -37 440 -18 409 -5 curveto378 8 342 15 302 15 curveto220 15 157 -12 113 -66 curveto68 -119 46 -187 46 -269 curveto46 -353 69 -423 116 -478 curveto163 -533 224 -561 298 -561 curveto338 -561 375 -552 408 -534 curveto441 -516 467 -488 486 -451 curveto505 -413 515 -360 515 -292 curveto515 -262 515 -292 515 -262 curveto136 -262 515 -262 136 -262 curveto136 -204 151 -156 182 -118 curveto212 -80 255 -61 309 -61 curveto348 -61 376 -69 394 -84 curveto412 -100 421 -117 421 -136 curvetoclosepath142 -330 moveto428 -330 142 -330 428 -330 curveto428 -341 428 -330 428 -341 curveto428 -366 422 -391 410 -415 curveto398 -438 382 -456 361 -468 curveto340 -479 316 -485 288 -485 curveto255 -485 225 -471 197 -444 curveto169 -417 151 -379 142 -330 curvetoclosepath} bind def/s103 {447 -50 moveto447 -115 447 -50 447 -115 curveto428 -77 404 -48 375 -29 curveto345 -10 310 0 269 0 curveto205 0 151 -25 109 -76 curveto67 -127 46 -194 46 -278 curveto46 -332 55 -382 74 -427 curveto93 -472 120 -506 154 -528 curveto188 -550 228 -561 274 -561 curveto308 -561 339 -554 366 -541 curveto393 -527 420 -500 447 -458 curveto447 -546 447 -458 447 -546 curveto538 -546 447 -546 538 -546 curveto538 -100 538 -546 538 -100 curveto538 12 526 86 503 122 curveto479 157 450 184 414 201 curveto378 218 336 227 287 227 curveto242 227 202 220 166 207 curveto130 194 103 176 85 152 curveto66 129 57 105 57 80 curveto57 72 57 80 57 72 curveto148 72 57 72 148 72 curveto148 80 148 72 148 80 curveto148 104 161 123 187 137 curveto213 152 246 159 286 159 curveto319 159 346 153 370 142 curveto393 131 412 113 426 87 curveto440 62 447 16 447 -50 curvetoclosepath447 -289 moveto447 -347 432 -395 402 -431 curveto372 -467 337 -485 295 -485 curveto251 -485 214 -467 185 -430 curveto156 -394 141 -343 141 -277 curveto141 -235 147 -198 159 -167 curveto170 -136 189 -112 213 -96 curveto238 -80 265 -72 293 -72 curveto339 -72 376 -92 404 -133 curveto433 -173 447 -225 447 -289 curvetoclosepath} bind def/s105 {72 0 moveto72 -546 72 0 72 -546 curveto163 -546 72 -546 163 -546 curveto163 0 163 -546 163 0 curveto72 0 163 0 72 0 curvetoclosepath163 -667 moveto72 -667 163 -667 72 -667 curveto72 -758 72 -667 72 -758 curveto163 -758 72 -758 163 -758 curveto163 -667 163 -758 163 -667 curvetoclosepath} bind def/s110 {163 -268 moveto163 0 163 -268 163 0 curveto72 0 163 0 72 0 curveto72 -546 72 0 72 -546 curveto163 -546 72 -546 163 -546 curveto163 -451 163 -546 163 -451 curveto182 -481 201 -503 219 -517 curveto237 -532 256 -543 276 -550 curveto295 -557 317 -561 341 -561 curveto375 -561 406 -554 433 -540 curveto460 -526 482 -505 497 -478 curveto512 -451 519 -407 519 -347 curveto519 0 519 -347 519 0 curveto428 0 519 0 428 0 curveto428 -308 428 0 428 -308 curveto428 -357 425 -391 418 -412 curveto412 -432 399 -448 380 -460 curveto361 -471 341 -477 319 -477 curveto292 -477 267 -469 243 -454 curveto218 -438 199 -416 185 -388 curveto170 -360 163 -320 163 -268 curvetoclosepath} bind def/s111 {304 15 moveto232 15 172 -9 121 -58 curveto71 -106 46 -178 46 -273 curveto46 -368 71 -440 121 -488 curveto172 -537 232 -561 304 -561 curveto375 -561 435 -537 486 -488 curveto536 -440 561 -368 561 -273 curveto561 -178 536 -106 486 -58 curveto435 -9 375 15 304 15 curvetoclosepath304 -61 moveto352 -61 392 -80 421 -119 curveto451 -158 466 -209 466 -273 curveto466 -337 451 -388 421 -427 curveto392 -466 352 -485 304 -485 curveto255 -485 215 -466 186 -427 curveto156 -388 141 -337 141 -273 curveto141 -209 156 -158 186 -119 curveto215 -80 255 -61 304 -61 curvetoclosepath} bind def/s114 {163 -270 moveto163 0 163 -270 163 0 curveto72 0 163 0 72 0 curveto72 -546 72 0 72 -546 curveto163 -546 72 -546 163 -546 curveto163 -450 163 -546 163 -450 curveto178 -477 195 -499 213 -514 curveto231 -529 251 -541 271 -549 curveto292 -557 313 -561 334 -561 curveto353 -561 370 -558 384 -553 curveto384 -458 384 -553 384 -458 curveto362 -469 339 -474 314 -474 curveto279 -474 245 -459 212 -429 curveto179 -399 163 -346 163 -270 curvetoclosepath} bind def/s115 {38 -143 moveto38 -145 38 -143 38 -145 curveto129 -145 38 -145 129 -145 curveto129 -143 129 -145 129 -143 curveto129 -119 138 -100 156 -84 curveto173 -69 203 -61 245 -61 curveto282 -61 312 -70 335 -88 curveto358 -107 370 -128 370 -153 curveto370 -186 347 -210 302 -224 curveto256 -238 302 -224 256 -238 curveto226 -248 256 -238 226 -248 curveto163 -267 226 -248 163 -267 curveto92 -294 56 -338 56 -399 curveto56 -442 73 -480 108 -512 curveto142 -545 194 -561 262 -561 curveto329 -561 377 -547 405 -519 curveto434 -491 448 -460 448 -426 curveto448 -424 448 -426 448 -424 curveto357 -424 448 -424 357 -424 curveto357 -426 357 -424 357 -426 curveto357 -444 348 -459 330 -469 curveto312 -480 287 -485 257 -485 curveto221 -485 194 -477 175 -462 curveto156 -447 146 -429 146 -406 curveto146 -390 152 -376 165 -365 curveto177 -355 198 -345 227 -337 curveto271 -324 227 -337 271 -324 curveto303 -315 271 -324 303 -315 curveto346 -303 374 -294 385 -288 curveto396 -283 406 -276 417 -268 curveto433 -257 444 -242 451 -226 curveto458 -209 462 -190 462 -168 curveto462 -116 444 -73 407 -38 curveto370 -3 316 15 246 15 curveto201 15 164 8 135 -5 curveto105 -19 82 -37 64 -61 curveto47 -85 38 -112 38 -143 curvetoclosepath} bind def/s116 {405 -78 moveto405 -1 405 -78 405 -1 curveto361 10 327 15 304 15 curveto270 15 239 8 212 -6 curveto185 -19 164 -39 150 -65 curveto136 -91 129 -133 129 -190 curveto129 -470 129 -190 129 -470 curveto34 -470 129 -470 34 -470 curveto34 -546 34 -470 34 -546 curveto129 -546 34 -546 129 -546 curveto129 -675 129 -546 129 -675 curveto220 -675 129 -675 220 -675 curveto220 -546 220 -675 220 -546 curveto379 -546 220 -546 379 -546 curveto379 -470 379 -546 379 -470 curveto220 -470 379 -470 220 -470 curveto220 -216 220 -470 220 -216 curveto220 -168 224 -134 231 -115 curveto239 -97 250 -83 266 -74 curveto283 -65 302 -61 324 -61 curveto342 -61 369 -67 405 -78 curvetoclosepath} bind def/s120 {262 -206 moveto121 0 262 -206 121 0 curveto26 0 121 0 26 0 curveto215 -277 26 0 215 -277 curveto37 -546 215 -277 37 -546 curveto142 -546 37 -546 142 -546 curveto268 -355 142 -546 268 -355 curveto399 -546 268 -355 399 -546 curveto494 -546 399 -546 494 -546 curveto315 -284 494 -546 315 -284 curveto503 0 315 -284 503 0 curveto398 0 503 0 398 0 curveto262 -206 398 0 262 -206 curvetoclosepath} bind defend/BuildGlyph { exch begin dup Metrics exch get 0 2 index BoundingBoxes exch get aload pop setcachedevice CharProcs exch 2 copy known not{pop/.notdef}if get exec fill end } def/BuildChar { 1 index /Encoding get exch get 1 index /BuildGlyph get exec } bind defcurrentdict end /OF0 exch definefont pop%%EndFont0 170 translate  1 -1 scale/AnObj save def1 1 1 SetBack   0 0 0 SetFore  UseFore0 0 translate0.000 0.000 0.000 setrgbcolorgsave 1.00 ps [ ] sd newpath 47.12 11.25 M 47.12 135.00 L mstroke grestoregsave 1.00 ps [ ] sd newpath 40.38 11.25 M 47.62 11.25 L mstroke grestoregsave[1.00 0.00 0.00 1.00 19.25 5.25] concat9.00 (OF0) 0 F(100) 0.00 9.00 18.00 WSgrestoregsave 1.00 ps [ ] sd newpath 40.38 35.38 M 47.62 35.38 L mstroke grestoregsave[1.00 0.00 0.00 1.00 25.25 29.38] concat9.00 (OF0) 0 F(80) 0.00 9.00 12.00 WSgrestoregsave 1.00 ps [ ] sd newpath 40.38 59.50 M 47.62 59.50 L mstroke grestoregsave[1.00 0.00 0.00 1.00 25.25 53.50] concat9.00 (OF0) 0 F(60) 0.00 9.00 12.00 WSgrestoregsave 1.00 ps [ ] sd newpath 40.38 83.75 M 47.62 83.75 L mstroke grestoregsave[1.00 0.00 0.00 1.00 25.25 77.75] concat9.00 (OF0) 0 F(40) 0.00 9.00 12.00 WSgrestoregsave 1.00 ps [ ] sd newpath 40.38 107.88 M 47.62 107.88 L mstroke grestoregsave[1.00 0.00 0.00 1.00 25.25 101.88] concat9.00 (OF0) 0 F(20) 0.00 9.00 12.00 WSgrestoregsave 1.00 ps [ ] sd newpath 40.38 132.00 M 47.62 132.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 31.25 126.00] concat9.00 (OF0) 0 F(0) 0.00 9.00 6.00 WSgrestoregsave 1.00 ps [ ] sd newpath 46.62 135.50 M 398.50 135.50 L mstroke grestoregsave 1.00 ps [ ] sd newpath 398.50 142.25 M 398.50 135.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 382.12 145.88] concat9.00 (OF0) 0 F(40x10) 0.00 12.88 28.75 WS6.25 (OF0) 0 F(3) 28.75 6.25 4.12 WSgrestoregsave 1.00 ps [ ] sd newpath 309.25 142.25 M 309.25 135.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 303.25 145.88] concat9.00 (OF0) 0 F(30) 0.00 9.00 12.00 WSgrestoregsave 1.00 ps [ ] sd newpath 219.88 142.25 M 219.88 135.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 213.88 145.88] concat9.00 (OF0) 0 F(20) 0.00 9.00 12.00 WSgrestoregsave 1.00 ps [ ] sd newpath 130.62 142.25 M 130.62 135.00 L mstroke grestoregsave[1.00 0.00 0.00 1.00 124.62 145.88] concat9.00 (OF0) 0 F(10) 0.00 9.00 12.00 WSgrestoregsave[1.00 0.00 0.00 1.00 203.88 158.00] concat9.00 (OF0) 0 F(Iterations) 0.00 9.00 41.25 WSgrestoregsave[ ] sdnewpath 50.62 132.00 M132.38 129.62 L149.12 124.50 L169.62 116.75 L213.25 111.88 L309.25 61.88 L398.50 31.38 L0.000 0.800 0.000 setrgbcolor1.00 ps2 setlinejoingsave 2.00 ps mstroke grestoregrestorenewpath 50.62 130.00 M50.62 134.00 L0.000 0.800 0.000 setrgbcolor1.00 psmstrokenewpath 48.62 132.00 M52.62 132.00 Lmstrokenewpath 132.38 127.62 M132.38 131.62 Lmstrokenewpath 130.38 129.62 M134.38 129.62 Lmstrokenewpath 149.12 122.50 M149.12 126.50 Lmstrokenewpath 147.12 124.50 M151.12 124.50 Lmstrokenewpath 169.62 114.75 M169.62 118.75 Lmstrokenewpath 167.62 116.75 M171.62 116.75 Lmstrokenewpath 213.25 109.88 M213.25 113.88 Lmstrokenewpath 211.25 111.88 M215.25 111.88 Lmstrokenewpath 309.25 59.88 M309.25 63.88 Lmstrokenewpath 307.25 61.88 M311.25 61.88 Lmstrokenewpath 398.50 29.38 M398.50 33.38 Lmstrokenewpath 396.50 31.38 M400.50 31.38 Lmstrokegsave[ ] sdnewpath 50.62 11.25 M132.38 20.88 L149.12 33.75 L169.62 77.62 L213.25 118.62 L309.25 123.88 L398.50 127.50 L1.000 0.000 0.000 setrgbcolor2 setlinejoingsave 2.00 ps mstroke grestoregrestorenewpath 50.62 9.25 M50.62 13.25 L1.000 0.000 0.000 setrgbcolormstrokenewpath 48.62 11.25 M52.62 11.25 Lmstrokenewpath 132.38 18.88 M132.38 22.88 Lmstrokenewpath 130.38 20.88 M134.38 20.88 Lmstrokenewpath 149.12 31.75 M149.12 35.75 Lmstrokenewpath 147.12 33.75 M151.12 33.75 Lmstrokenewpath 169.62 75.62 M169.62 79.62 Lmstrokenewpath 167.62 77.62 M171.62 77.62 Lmstrokenewpath 213.25 116.62 M213.25 120.62 Lmstrokenewpath 211.25 118.62 M215.25 118.62 Lmstrokenewpath 309.25 121.88 M309.25 125.88 Lmstrokenewpath 307.25 123.88 M311.25 123.88 Lmstrokenewpath 398.50 125.50 M398.50 129.50 Lmstrokenewpath 396.50 127.50 M400.50 127.50 Lmstrokegsave[ ] sdnewpath 50.62 132.00 M132.38 124.88 L149.12 117.00 L169.62 81.00 L213.25 44.75 L309.25 89.62 L398.50 116.38 L1.000 0.667 0.000 setrgbcolor2 setlinejoingsave 2.00 ps mstroke grestoregrestorenewpath 50.62 130.00 M50.62 134.00 L1.000 0.667 0.000 setrgbcolormstrokenewpath 48.62 132.00 M52.62 132.00 Lmstrokenewpath 132.38 122.88 M132.38 126.88 Lmstrokenewpath 130.38 124.88 M134.38 124.88 Lmstrokenewpath 149.12 115.00 M149.12 119.00 Lmstrokenewpath 147.12 117.00 M151.12 117.00 Lmstrokenewpath 169.62 79.00 M169.62 83.00 Lmstrokenewpath 167.62 81.00 M171.62 81.00 Lmstrokenewpath 213.25 42.75 M213.25 46.75 Lmstrokenewpath 211.25 44.75 M215.25 44.75 Lmstrokenewpath 309.25 87.62 M309.25 91.62 Lmstrokenewpath 307.25 89.62 M311.25 89.62 Lmstrokenewpath 398.50 114.38 M398.50 118.38 Lmstrokenewpath 396.50 116.38 M400.50 116.38 Lmstrokegsave[1.00 0.00 0.00 1.00 79.12 64.62] concatnewpath 0.00 0.00 M18.50 0.00 L18.50 12.00 L0.00 12.00 Lclosepath1.000 1.000 1.000 setrgbcolorfill0.000 0.000 0.000 setrgbcolor9.00 (OF0) 0 F(Fast) 0.00 9.00 18.50 WSgrestoreAnObj restoreendIgorSave restore%%Trailer%%EOF